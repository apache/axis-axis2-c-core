#######################################################################################################################
#####################   code generator property file  #################################################################
#######################################################################################################################
# Extensions - The extension class names are comma separated
# and these extensions will run before the main emitter
# these are loaded in their lexical order
codegen.extension=w2c_databinding_default_ext, \
                  w2c_default_qname2name_ext, \
                  w2c_c_namemaker_ext, \
                  w2c_c_qname2name_ext, \
                  w2c_databinding_adb_ext
post.codegen.extension=w2c_c_code_indenter_ext
# Language types - these are the language types that the code generator understands. Again this is the name of the
# language that should be passed from the tool as well
#
codegen.languages=c
# Emitter class is the  major code generator class that should be changed according to the language.
# The emiiters need to implement the Emitter interface
# Note - The emitters should appear in the lexical order of the languages. So the language c in the above
# list corresponds to the w2c_c_emitter.JavaEmitter
codegen.emitters=w2c_c_emitter
# Default language, this is the default language that would be picked when no language is specified. it should be
# one of the languages specified above
codegen.languages.default=c
#####################################################################################################################
########################  Language specific section #################################################################
#####################################################################################################################
# The language specific section has a special custom style. The language name comes first and separated from the period
# a unique name. These parameters will be included in a hashmap that is will be stored in another hash map with the
# language as the key
#####################################################################################################################
# C section  - Templates.
# The format of the templates is <writer-class-name>,<template-name>
# Note this section is specific to the emitter logic. One can have anything here!

c.interface.header.template=w2c_cstub_header_writer,c/StubHeaderTemplate.xsl
c.interface.impl.template=w2c_cstub_source_writer,c/StubSourceTemplate.xsl
c.skeleton.header.template=w2c_cskel_header_writer,c/SkelHeaderTemplate.xsl
c.skeleton.impl.template=w2c_cskel_source_writer,c/SkelSourceTemplate.xsl
c.svc_skeleton.template=w2c_csvc_skeleton_writer,c/ServiceSkeleton.xsl
c.service.template=w2c_cservice_xml_writer,c/ServiceXMLTemplate.xsl

# file extension for generated source files from this language
c.filename.extension=c

